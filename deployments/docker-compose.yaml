version: '3.8'
name: local-dev
services:
  api:
    build:
      context: ../
      dockerfile: build/container/Dockerfile-web-api
      target: development
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      - db
      - redis
    environment:
      - API_PORT=${API_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}

  db:
    image: postgres:14-alpine
    restart: always
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data

  migrate:
    image: migrate/migrate:v4.16.2
    profiles: ["tools"]
    volumes:
      - ../migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable",
      ]
    command: ["up"]
    restart: on-failure

  redis:
    image: redis
    restart: always
    volumes:
      - redis_data:/data

volumes:
  db_data:
  redis_data: